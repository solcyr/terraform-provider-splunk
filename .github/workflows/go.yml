name: Terraform Provider For Splunk
on: [push]
jobs:

  build_linux:
    name: Linux Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v .

    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: terraform-provider-splunk-linux
        # Directory containing files to upload
        path: terraform-provider-splunk


  build_windows:
    name: Windows Build
    runs-on: windows-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
       
    - name: Build
      run: go build -v .

    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: terraform-provider-splunk-windows
        path: terraform-provider-splunk.exe
          
  create_release:
    needs: [build_linux, build_windows]
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Get Linux Artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: terraform-provider-splunk-linux
          path: terraform-provider-splunk
          
      - name: Get Windows Artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: terraform-provider-splunk-windows
          path: terraform-provider-splunk.exe
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false        
